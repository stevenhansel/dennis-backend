version: '3'
services:
  nginx:
    image: 'nginx:latest'
    container_name: nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '5432:5432'
      - '5432:5432/udp'
    volumes:
      - /home/ubuntu/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /home/ubuntu/nginx/certbot/www:/var/www/certbot:ro
      - /home/ubuntu/nginx/certbot/conf:/etc/nginx/ssl:ro
    networks:
      - apinetwork
    depends_on:
      - api
      - webhook

  api:
    image: 'ghcr.io/stevenhansel/dennis-backend:latest'
    container_name: api
    restart: unless-stopped
    env_file: /home/ubuntu/env/.env
    networks:
      - apinetwork
    depends_on:
      - postgres

  postgres:
    image: 'postgres:latest'
    container_name: postgres
    restart: unless-stopped
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - apinetwork
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}

  webhook:
    image: 'almir/webhook'
    container_name: webhook
    command: -verbose -hooks=/etc/webhook/hooks.json
    restart: unless-stopped
    networks:
      - apinetwork
    volumes:
      - /home/ubuntu/webhook:/etc/webhook

volumes:
  postgres:

networks:
  apinetwork:
    name: apinetwork
    external: true
